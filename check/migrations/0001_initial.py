# Generated by Django 3.1.3 on 2020-11-28 16:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUserModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'custom_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CompanyHomepageURLModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homepage_url', models.URLField(verbose_name='企業URL')),
                ('word_cloud_path', models.CharField(max_length=255, verbose_name='ワードクラウドパス')),
            ],
            options={
                'db_table': 'homepage_urls',
            },
        ),
        migrations.CreateModel(
            name='CompanyModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100, verbose_name='企業名')),
            ],
            options={
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='EntrySheetesModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selection_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='選考種別')),
                ('is_editing', models.BooleanField(default=True, verbose_name='作成中or完成')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日時')),
                ('deadline_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='提出期限')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='check.companymodel', verbose_name='企業 ')),
                ('homepage_url', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='check.companyhomepageurlmodel', verbose_name='ホームページURL')),
            ],
            options={
                'db_table': 'entry_sheets',
            },
        ),
        migrations.CreateModel(
            name='TagModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=255, verbose_name='タグ名')),
                ('author', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='QuestionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='質問')),
                ('answer', models.TextField(blank=True, null=True, verbose_name='')),
                ('char_num', models.IntegerField(blank=True, default=0)),
                ('open_info', models.CharField(choices=[('public', '公開'), ('private', '非公開')], default='private', max_length=20, verbose_name='公開or非公開')),
                ('entry_sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='check.entrysheetesmodel', verbose_name='エントリーシート')),
                ('tags', models.ManyToManyField(to='check.TagModel', verbose_name='タグ名')),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.AddField(
            model_name='companyhomepageurlmodel',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='check.companymodel', verbose_name='企業'),
        ),
    ]
